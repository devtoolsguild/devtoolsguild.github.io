"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2920],{1988:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"background/architecture","title":"Architecture","description":"This section describes the Guild\u2019s current smart contract architecture.","source":"@site/docs/background/architecture.md","sourceDirName":"background","slug":"/background/architecture","permalink":"/background/architecture","draft":false,"unlisted":false,"editUrl":"https://github.com/devtoolsguild/docs/docs/background/architecture.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"docs","previous":{"title":"Measuring Impact","permalink":"/background/impact"},"next":{"title":"Assets","permalink":"/background/assets"}}');var n=s(4848),r=s(8453);const o={sidebar_position:4},l="Architecture",c={},a=[{value:"Modules",id:"modules",level:2},{value:"Vesting Contract",id:"vesting-contract",level:3},{value:"How it works:",id:"how-it-works",level:4},{value:"SplitV2 Contract",id:"splitv2-contract",level:3},{value:"How it works:",id:"how-it-works-1",level:4},{value:"Updating Guild Members and Their Weights",id:"updating-guild-members-and-their-weights",level:3},{value:"Prerequisites",id:"prerequisites",level:4},{value:"Resources",id:"resources",level:2}];function d(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"architecture",children:"Architecture"})}),"\n",(0,n.jsx)(t.p,{children:"This section describes the Guild\u2019s current smart contract architecture."}),"\n",(0,n.jsx)(t.h2,{id:"modules",children:"Modules"}),"\n",(0,n.jsxs)(t.p,{children:["The DevTools Guild plans to follow the precedent set by the ",(0,n.jsx)(t.a,{href:"https://protocol-guild.readthedocs.io/en/latest/03-onchain-architecture.html",children:"Protocol Guild"})," with respect to the smart contract infrastructure it utilizes."]}),"\n",(0,n.jsx)(t.p,{children:"Following are the two core contracts that DevTools Guild will utilize."}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"The Splits contract"})," is used for splitting fund distributions to multiple addresses."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"The Vesting contract"})," is used to vest funds over a defined period of time before they can be released to the Splits contract."]}),"\n"]}),"\n",(0,n.jsx)(t.h3,{id:"vesting-contract",children:"Vesting Contract"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"https://github.com/0xSplits/splits-vesting/tree/master",children:"Vesting Contract Repository"})}),"\n",(0,n.jsx)(t.p,{children:"Vesting contracts enable the gradual release of funds to a designated beneficiary over a predetermined period. Each Vesting contract can manage multiple, isolated streams of tokens, all sharing the same vesting period but capable of starting and releasing independently."}),"\n",(0,n.jsx)(t.p,{children:"The process involves:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Funding the Vesting Contract"}),": ETH and ERC20 tokens are sent to the Vesting contract, where they are held until a vesting stream is initiated."]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Starting a Vesting Stream"}),": A vesting stream for a specific token is initiated, beginning the linear vesting process over the set period. Multiple streams can operate simultaneously within the same contract."]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Releasing Vested Funds"}),": At any time, anyone can release the vested portion of tokens to the beneficiary. This mechanism ensures that funds are distributed gradually, aligning with predefined vesting schedules."]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.h4,{id:"how-it-works",children:"How it works:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["Donated tokens will accrue in a per-asset queue until a vesting stream is started for that batch of tokens by triggering the ",(0,n.jsx)(t.code,{children:"startStream"})," function.","\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["This function is ",(0,n.jsx)(t.strong,{children:"permissionless"}),", meaning ",(0,n.jsx)(t.strong,{children:"any actor"})," can trigger it, regardless of whether they are a Guild member."]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["Once the vesting stream is started, the tokens will vest ",(0,n.jsx)(t.strong,{children:"linearly over 12 months"})," (or any predefined period set during contract deployment)."]}),"\n",(0,n.jsxs)(t.li,{children:["Anyone can ",(0,n.jsx)(t.strong,{children:"permissionlessly"})," trigger ",(0,n.jsx)(t.code,{children:"releaseStream"})," to push vested tokens into the ",(0,n.jsx)(t.strong,{children:"SplitsV2"})," contract. ",(0,n.jsx)(t.em,{children:"(Note: This must be done per vesting stream.)"})]}),"\n"]}),"\n",(0,n.jsx)(t.h3,{id:"splitv2-contract",children:"SplitV2 Contract"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"https://github.com/0xSplits/splits-contracts-monorepo/tree/main/packages/splits-v2",children:"SplitV2 Contract Repository"})}),"\n",(0,n.jsx)(t.p,{children:"SplitV2 contracts allow you to distribute payments to multiple recipients. Each Split is a payable smart contract wallet with multiple recipients, each assigned a specific ownership percentage. When ETH or ERC20 tokens are sent to the Split, they are held in the contract\u2019s balance until a distribution is initiated."}),"\n",(0,n.jsx)(t.p,{children:"SplitV2 offers two types of splitters:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Pull Splits"}),": After distribution, funds are held in a central contract called the Warehouse. Recipients can withdraw their allocated funds from the Warehouse at their convenience. This method is efficient for managing distributions to a large number of recipients."]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Push Splits"}),": Upon distribution, funds are sent directly to recipients. To manage gas costs, these transfers are hard gas-capped; if a transfer fails, the funds are deposited into the Warehouse for later withdrawal. This approach ensures immediate fund delivery when possible."]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.h4,{id:"how-it-works-1",children:"How it works:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["The ",(0,n.jsx)(t.code,{children:"distribute"})," function allocates tokens in the Split contract to Guild members ",(0,n.jsx)(t.strong,{children:"according to their weights"})," (it does not move the funds into the member wallets)."]}),"\n",(0,n.jsxs)(t.li,{children:["Once ",(0,n.jsx)(t.code,{children:"distribute"})," has been triggered, members can call the ",(0,n.jsx)(t.code,{children:"withdrawForMyself"})," function to deposit their allocated tokens into their wallets."]}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["For the ",(0,n.jsx)(t.strong,{children:"DTG pilot"}),", we intend to use ",(0,n.jsx)(t.strong,{children:"Pull Splits"}),". This approach, currently used by Protocol Guild (PG), allows recipients to withdraw funds at their convenience after the ",(0,n.jsx)(t.code,{children:"distribute"})," function has been called."]}),"\n",(0,n.jsx)(t.h3,{id:"updating-guild-members-and-their-weights",children:"Updating Guild Members and Their Weights"}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.strong,{children:"controller"})," of the SplitV2 contract has the permission to update guild members and their weights using the ",(0,n.jsx)(t.strong,{children:"Splits app"}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["Adjusting the list of guild members is ",(0,n.jsx)(t.strong,{children:"independent"})," of other functions like ",(0,n.jsx)(t.code,{children:"startVestingStream"}),", ",(0,n.jsx)(t.code,{children:"releaseVestingStream"}),", or ",(0,n.jsx)(t.code,{children:"distribute"}),". Guild members can be updated at any time; however, once the distribution of vested tokens begins, the funds will be ",(0,n.jsx)(t.strong,{children:"allocated according to the current guild members\u2019 shares at the time of distribution"}),"."]}),"\n",(0,n.jsx)(t.h4,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,n.jsxs)(t.p,{children:["Before updating weights or the member list, it is ",(0,n.jsx)(t.strong,{children:"recommended"})," to:"]}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Release any ongoing vesting streams"})," using the ",(0,n.jsx)(t.code,{children:"releaseVestingStream"})," function."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Distribute funds"})," via the ",(0,n.jsx)(t.strong,{children:"Splits app"})," to the existing member list."]}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["This ensures that the ",(0,n.jsx)(t.strong,{children:"current members receive their rightful share of the funds"}),". Once the distribution is completed, the member list can be ",(0,n.jsx)(t.strong,{children:"safely updated"}),"."]}),"\n",(0,n.jsx)(t.h2,{id:"resources",children:"Resources"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"https://docs.splits.org/",children:"Splits Documentation"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"https://github.com/0xSplits/splits-contracts",children:"Splits Contracts Repository"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"https://protocol-guild.readthedocs.io/en/latest/03-onchain-architecture.html",children:"Protocol Guild Onchain Architecture"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"https://protocol-guild.readthedocs.io/en/latest/07-resources.html#pilot-smart-contract-architecture",children:"Protocol Guild Pilot Smart Contract Architecture"})}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>l});var i=s(6540);const n={},r=i.createContext(n);function o(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);